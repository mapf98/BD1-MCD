-- MINERUCAB 2019 --
-- Por: 
	-- Miguel Fraga
	-- David Monroy
	-- Carolina Patino


------------- CREATES --------------------


CREATE TABLE ESTATUS (
	EST_CODIGO SERIAL,
	EST_NOMBRE VARCHAR (50) NOT NULL,
	CONSTRAINT PK_CODIGO_ESTATUS PRIMARY KEY (EST_CODIGO)
);

CREATE TABLE HORARIO (
	HOR_CODIGO SERIAL,
	HOR_DIA VARCHAR (50) NOT NULL,
	HOR_HORAINICIO TIME NOT NULL,
	HOR_HORAFIN TIME NOT NULL
	CONSTRAINT CHECK_DIA_HORARIO CHECK(HOR_DIA IN ('LUNES','MARTES','MIERCOLES','JUEVES','VIERNES')),
	CONSTRAINT PK_CODIGO_HORARIO PRIMARY KEY (HOR_CODIGO)
);

CREATE TABLE LUGAR (
	LUG_CODIGO SERIAL,
	LUG_NOMBRE VARCHAR(50) NOT NULL,
	LUG_TIPO VARCHAR(50) NOT NULL,
	FK_LUG_LUGAR INTEGER,
	CONSTRAINT PK_CODIGO_LUGAR PRIMARY KEY (LUG_CODIGO),
	CONSTRAINT CHECK_TIPO_LUGAR CHECK (LUG_TIPO IN ('ESTADO','PARROQUIA','MUNICIPIO')),
	CONSTRAINT FK_LUGAR_LUGAR FOREIGN KEY (FK_LUG_LUGAR) REFERENCES LUGAR (LUG_CODIGO)
);

CREATE TABLE CARGO (
	CAR_CODIGO SERIAL,
	CAR_NOMBRE VARCHAR (50) NOT NULL,
	CONSTRAINT PK_CODIGO_CARGO PRIMARY KEY (CAR_CODIGO)
);

CREATE TABLE ROL (
	ROL_CODIGO SERIAL,
	ROL_NOMBRE VARCHAR(50) NOT NULL,
	CONSTRAINT PK_CODIGO_ROL PRIMARY KEY (ROL_CODIGO),
	CONSTRAINT CHECK_ROL CHECK (ROL_NOMBRE IN ('ADMINISTRADOR','VENDEDOR','RH','ESPECIALISTA','GESTOR'))
);

CREATE TABLE PRIVILEGIO(
	PRI_CODIGO SERIAL,
	PRI_NOMBRE VARCHAR(50) NOT NULL,
	CONSTRAINT PK_CODIGO_PRIVILEGIO PRIMARY KEY (PRI_CODIGO)
);

CREATE TABLE ROL_PRI (
	RP_CODIGO SERIAL,
	FK_RP_ROL INTEGER NOT NULL,
	FK_RP_PRIVILEGIO INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_RP PRIMARY KEY (RP_CODIGO),
	CONSTRAINT FK_ROL_RP FOREIGN KEY (FK_RP_ROL) REFERENCES ROL (ROL_CODIGO),
	CONSTRAINT FK_PRIVILEGIO_RP FOREIGN KEY (FK_RP_PRIVILEGIO) REFERENCES PRIVILEGIO (PRI_CODIGO)
);

CREATE TABLE PRESENTACION(
	PRE_CODIGO SERIAL,
	PRE_NOMBRE VARCHAR(50) NOT NULL,
	CONSTRAINT PK_CODIGO_PRESENTACION PRIMARY KEY (PRE_CODIGO)
);

CREATE TABLE EMPLEADO(
	EMP_CODIGO SERIAL,
	EMP_CEDULA NUMERIC(8) NOT NULL UNIQUE,
	EMP_NOMBRE VARCHAR(50) NOT NULL,
	EMP_APELLIDO VARCHAR(50) NOT NULL,
	EMP_FECHANACIMIENTO DATE NOT NULL,
	EMP_GENERO CHAR(1) NOT NULL,
	EMP_TELEFONO NUMERIC(15) NOT NULL,
	FK_EMP_CARGO INTEGER NOT NULL,
	FK_EMP_LUGAR INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_EMPLEADO PRIMARY KEY (EMP_CODIGO),
	CONSTRAINT CHECK_GENERO CHECK (EMP_GENERO IN ('M','F','O')),
	CONSTRAINT FK_CARGO_EMPLEADO FOREIGN KEY(FK_EMP_CARGO) REFERENCES CARGO (CAR_CODIGO),
	CONSTRAINT FK_LUGAR_EMPLEADO FOREIGN KEY(FK_EMP_LUGAR) REFERENCES LUGAR (LUG_CODIGO)
);


CREATE TABLE USUARIO(
	USU_USUARIO_ID SERIAL,
	USU_USUARIO VARCHAR(50) NOT NULL UNIQUE,
	USU_PASSWORD VARCHAR(50) NOT NULL,
	FK_USU_EMPLEADO_CI INTEGER  NOT NULL UNIQUE,
	FK_USU_ROL INTEGER NOT NULL,
	CONSTRAINT PK_USUARIO_ID PRIMARY KEY (USU_USUARIO_ID),
	CONSTRAINT FK_ROL_USUARIO FOREIGN KEY (FK_USU_ROL) REFERENCES ROL (ROL_CODIGO),
	CONSTRAINT FK_EMPLEADO_ID_USUARIO FOREIGN KEY (FK_USU_EMPLEADO_CI) REFERENCES EMPLEADO (EMP_CEDULA) ON DELETE CASCADE
);

CREATE TABLE ALIADO_COMERCIAL (
	AC_NUMERO_RIF VARCHAR(50) NOT NULL UNIQUE,
	AC_NOMBRE VARCHAR(50) NOT NULL,
	AC_TELEFONO NUMERIC(15) NOT NULL,
	FK_AC_LUGAR INTEGER NOT NULL,
	CONSTRAINT PK_NUMERO_RIF_ALIADO_COMERCIAL PRIMARY KEY(AC_NUMERO_RIF),
	CONSTRAINT FK_LUGAR_ALIADO_COMERCIAL FOREIGN KEY (FK_AC_LUGAR) REFERENCES LUGAR (LUG_CODIGO)
);

CREATE TABLE TIPO_MAQUINARIA(
	TM_CODIGO SERIAL, 
	TM_NOMBRE VARCHAR(50) NOT NULL,
	CONSTRAINT PK_CODIGO_TIPO_MAQUINARIA PRIMARY KEY (TM_CODIGO)
);

CREATE TABLE MAQUINARIA(
	MAQ_CODIGO SERIAL,
	MAQ_NOMBRE VARCHAR(50) NOT NULL,
	FK_MAQ_TIPO INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_MAQUINARIA PRIMARY KEY (MAQ_CODIGO),
	CONSTRAINT FK_TIPO_MAQUINARIA FOREIGN KEY (FK_MAQ_TIPO) REFERENCES TIPO_MAQUINARIA(TM_CODIGO)
);

CREATE TABLE CLIENTE (
	CLI_CODIGO SERIAL,
	CLI_CEDULA NUMERIC(8) NOT NULL UNIQUE,
	CLI_NOMBRE VARCHAR(50) NOT NULL,
	CLI_APELLIDO VARCHAR(50) NOT NULL,
	CLI_TELEFONO NUMERIC(10) NOT NULL,
	FK_CLI_LUGAR INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_CLIENTE PRIMARY KEY (CLI_CODIGO),
	CONSTRAINT FK_LUGAR_CLIENTE FOREIGN KEY (FK_CLI_LUGAR) REFERENCES LUGAR(LUG_CODIGO)
);

CREATE TABLE VENTA(
	VEN_CODIGO SERIAL,
	VEN_FECHA TIMESTAMP NOT NULL,
	VEN_MONTOTOTAL NUMERIC(15,2) NOT NULL,
	FK_VEN_ESTATUS INTEGER,
	FK_VEN_CLIENTE INTEGER NOT NULL,
	FK_VEN_USUARIO INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_VENTA PRIMARY KEY (VEN_CODIGO),
	CONSTRAINT FK_ESTATUS_VENTA FOREIGN KEY (FK_VEN_ESTATUS) REFERENCES ESTATUS(EST_CODIGO),
	CONSTRAINT FK_CLIENTE_VENTA FOREIGN KEY (FK_VEN_CLIENTE) REFERENCES CLIENTE(CLI_CODIGO),
	CONSTRAINT FK_USUARIO_VENTA FOREIGN KEY (FK_VEN_USUARIO) REFERENCES USUARIO(USU_USUARIO_ID),
	CONSTRAINT CHECK_MONTOTOTAL_VENTA CHECK (VEN_MONTOTOTAL > 0)
);

CREATE TABLE YACIMIENTO(
	YAC_CODIGO SERIAL,
	YAC_EXTENSION NUMERIC(15,2) NOT NULL,
	YAC_FECHAREGISTRO DATE NOT NULL,
	YAC_NOMBRE VARCHAR (50) NOT NULL UNIQUE,
	FK_YAC_ESTATUS INTEGER NOT NULL,
	FK_YAC_LUGAR INTEGER NOT NULL,
	CONSTRAINT PF_CODIGO_YACIMIENTO PRIMARY KEY (YAC_CODIGO),
	CONSTRAINT FK_ESTATUS_YACIMIENTO FOREIGN KEY (FK_YAC_ESTATUS) REFERENCES ESTATUS(EST_CODIGO),
	CONSTRAINT FK_LUGAR_YACIMIENTO FOREIGN KEY (FK_YAC_LUGAR) REFERENCES LUGAR(LUG_CODIGO)
);

CREATE TABLE EXPLOTACION(
	EXP_CODIGO SERIAL,
	EXP_DURACION NUMERIC(25),
	EXP_FECHAINICIO DATE,
	EXP_FECHAFIN DATE,
	EXP_COSTOTOTAL NUMERIC(15,2),
	FK_EXP_ESTATUS INTEGER NOT NULL,
	FK_EXP_VENTA INTEGER,
	FK_EXP_YACIMIENTO INTEGER NOT NULL UNIQUE,
	CONSTRAINT PK_CODIGO_EXPLOTACION PRIMARY KEY (EXP_CODIGO),
	CONSTRAINT FK_ESTATUS_EXPLOTACION FOREIGN KEY (FK_EXP_ESTATUS) REFERENCES ESTATUS(EST_CODIGO),
	CONSTRAINT FK_VENTA_EXPLOTACION FOREIGN KEY (FK_EXP_VENTA) REFERENCES VENTA(VEN_CODIGO),
	CONSTRAINT FK_YACIMIENTO_EXPLOTACION FOREIGN KEY (FK_EXP_YACIMIENTO) REFERENCES YACIMIENTO (YAC_CODIGO),
	CONSTRAINT CHECK_COSTOTOTAL_EXPLOTACION CHECK (EXP_COSTOTOTAL >= 0)
);

CREATE TABLE ETAPA (
	ETA_CODIGO SERIAL,
	ETA_NOMBRE VARCHAR(50) NOT NULL,
	ETA_DURACION NUMERIC (25),
	ETA_FECHAINICIO DATE,
	ETA_FECHAFIN DATE,
	ETA_COSTOTOTAL NUMERIC(15,2),
	FK_ETA_EXPLOTACION INTEGER,
	FK_ETA_ESTATUS INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_ETAPA PRIMARY KEY (ETA_CODIGO),
	CONSTRAINT FK_ESTATUS_ETAPA FOREIGN KEY (FK_ETA_ESTATUS) REFERENCES ESTATUS (EST_CODIGO),
	CONSTRAINT FK_EXPLOTACION_ETAPA FOREIGN KEY (FK_ETA_EXPLOTACION) REFERENCES EXPLOTACION (EXP_CODIGO) ON DELETE CASCADE,
	CONSTRAINT CHECK_COSTOTOTAL_ETAPA CHECK (ETA_COSTOTOTAL > 0)
);

CREATE TABLE FASE(
	FAS_CODIGO SERIAL,
	FAS_NOMBRE VARCHAR(50) NOT NULL,
	FAS_DURACION NUMERIC (25),
	FAS_FECHAINICIO DATE,
	FAS_FECHAFIN DATE,
	FAS_COSTOTOTAL NUMERIC(15,2),
	FK_FAS_ETAPA INTEGER NOT NULL,
	FK_FAS_ESTATUS INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_FASE PRIMARY KEY (FAS_CODIGO),
	CONSTRAINT FK_ETAPA_FASE FOREIGN KEY (FK_FAS_ETAPA) REFERENCES ETAPA (ETA_CODIGO) ON DELETE CASCADE,
	CONSTRAINT FK_ESTATUS_FASE FOREIGN KEY (FK_FAS_ESTATUS) REFERENCES ESTATUS (EST_CODIGO),
	CONSTRAINT CHECK_COSTOTOTAL_FASE CHECK (FAS_COSTOTOTAL > 0)
);

CREATE TABLE CAR_FAS(
	CF_CODIGO SERIAL,
	CF_CANTIDAD INTEGER NOT NULL DEFAULT 0,
	CF_COSTO NUMERIC(15,2) NOT NULL,
	FK_CF_CARGO INTEGER NOT NULL,
	FK_CF_FASE INTEGER NOT NULL,
	CONSTRAINT FK_CARGO_CF FOREIGN KEY (FK_CF_CARGO) REFERENCES CARGO (CAR_CODIGO) ON DELETE CASCADE,
	CONSTRAINT FK_FASE_CF FOREIGN KEY (FK_CF_FASE) REFERENCES FASE (FAS_CODIGO) ON DELETE CASCADE,
	CONSTRAINT PK_CODIGO_CF PRIMARY KEY (CF_CODIGO)
);

CREATE TABLE EMP_CF(
	ECF_CODIGO SERIAL,
	-- ECF_SUELDO NUMERIC(15,2) NOT NULL,
	FK_ECF_EMPLEADO INTEGER NOT NULL,
	FK_ECF_CARFAS INTEGER NOT NULL,
	FK_ECF_ESTATUS INTEGER NOT NULL,
	CONSTRAINT FK_EMPLEADO_ECF FOREIGN KEY (FK_ECF_EMPLEADO) REFERENCES EMPLEADO (EMP_CODIGO),
	CONSTRAINT FK_CARFAS_ECF FOREIGN KEY (FK_ECF_CARFAS) REFERENCES CAR_FAS (CF_CODIGO),
	CONSTRAINT FK_ECF_ESTATUS FOREIGN KEY (FK_ECF_ESTATUS) REFERENCES ESTATUS (EST_CODIGO),
	CONSTRAINT PK_CODIGO_ECF PRIMARY KEY (ECF_CODIGO)
	-- CONSTRAINT CHECK_SUELDO_ECF CHECK (ECF_SUELDO>0)
);

CREATE TABLE TM_FAS(
	TMF_CODIGO SERIAL,
	TMF_CANTIDAD NUMERIC(25) NOT NULL DEFAULT 0,
	TMF_COSTO NUMERIC(15,2) NOT NULL,
	FK_TMF_TM INTEGER NOT NULL,
	FK_TMF_ESTATUS INTEGER,
	FK_TMF_FASE INTEGER NOT NULL,
	CONSTRAINT FK_TMF_FAS FOREIGN KEY (FK_TMF_FASE) REFERENCES FASE (FAS_CODIGO) ON DELETE CASCADE,
	CONSTRAINT FK_TMF_EST FOREIGN KEY (FK_TMF_ESTATUS) REFERENCES ESTATUS (EST_CODIGO),
	CONSTRAINT FK_TMF_TM FOREIGN KEY (FK_TMF_TM) REFERENCES TIPO_MAQUINARIA (TM_CODIGO) ON DELETE CASCADE,
	CONSTRAINT PK_CODIGO_TMF PRIMARY KEY (TMF_CODIGO)
);

CREATE TABLE HOR_ECF(
	HECF_CODIGO SERIAL,
	FK_HECF_ECF INTEGER NOT NULL,
	FK_HECF_HOR INTEGER NOT NULL,
	CONSTRAINT FK_ECF_HECF FOREIGN KEY (FK_HECF_ECF) REFERENCES EMP_CF (ECF_CODIGO),
	CONSTRAINT FK_HORARIO_HECF FOREIGN KEY (FK_HECF_HOR) REFERENCES HORARIO (HOR_CODIGO),
	CONSTRAINT PK_CODIGO_HECF PRIMARY KEY (HECF_CODIGO)
);

CREATE TABLE MIN_METALICO (
	MET_CODIGO SERIAL,
	MET_NOMBRE VARCHAR (50) NOT NULL UNIQUE,
	MET_ESCALAMALEABILIDAD NUMERIC(10) NOT NULL,
	MET_ESCALADUREZA NUMERIC(10) NOT NULL,
	CONSTRAINT PK_CODIGO_MET PRIMARY KEY (MET_CODIGO)
);

CREATE TABLE MIN_NO_METALICO (
	NOM_CODIGO SERIAL,
	NOM_NOMBRE VARCHAR (50) NOT NULL UNIQUE,
	NOM_UTILIDAD VARCHAR (50),
	CONSTRAINT PK_CODIGO_NOM PRIMARY KEY (NOM_CODIGO)
);

CREATE TABLE MIN_PRE(
	MP_CODIGO SERIAL,
	MP_PRECIO NUMERIC (15,2) NOT NULL,
	FK_MP_PRESENTACION INTEGER NOT NULL,
	FK_MP_METALICO INTEGER,
	FK_MP_NOMETALICO INTEGER,
	CONSTRAINT PK_CODIGO_MP PRIMARY KEY (MP_CODIGO),
	CONSTRAINT FK_PRESENTACION_MP FOREIGN KEY (FK_MP_PRESENTACION) REFERENCES  PRESENTACION (PRE_CODIGO),
	CONSTRAINT FK_METALICO_MP FOREIGN KEY (FK_MP_METALICO) REFERENCES MIN_METALICO (MET_CODIGO),
	CONSTRAINT FK_NOMETALICO_MP FOREIGN KEY (FK_MP_NOMETALICO) REFERENCES MIN_NO_METALICO (NOM_CODIGO)
);

CREATE TABLE INVENTARIO (
	INV_CODIGO SERIAL,
	INV_CANTIDADMOVIMIENTO NUMERIC(15,2) NOT NULL,
	INV_CANTIDADACTUAL NUMERIC(15,2) NOT NULL,
	INV_FECHAMOVIMIENTO TIMESTAMP NOT NULL,
	FK_INV_VENTA INTEGER,
	FK_INV_EXPLOTACION INTEGER ,
	FK_INV_MINPRE INTEGER,
	CONSTRAINT FK_EXPLOTACION_INVENTARIO FOREIGN KEY (FK_INV_EXPLOTACION) REFERENCES EXPLOTACION (EXP_CODIGO),
	CONSTRAINT FK_VENTA_INVENTARIO FOREIGN KEY (FK_INV_VENTA) REFERENCES VENTA (VEN_CODIGO) ON DELETE CASCADE ,
	CONSTRAINT FK_MINPRE_INVENTARIO FOREIGN KEY (FK_INV_MINPRE) REFERENCES MIN_PRE (MP_CODIGO),
	CONSTRAINT PK_CODIGO_INVENTARIO PRIMARY KEY (INV_CODIGO),
	CONSTRAINT CHECK_CANTIDADACTUAL_INV CHECK (INV_CANTIDADACTUAL>=0)
);

CREATE TABLE SOLICITUD_COMPRA(
	SC_CODIGO SERIAL,
	SC_FECHAEMISION DATE NOT NULL,
	SC_COSTOTOTAL NUMERIC (15,2) NOT NULL,
	FK_SC_ALIADO VARCHAR(50) NOT NULL,
	FK_SC_ESTATUS INTEGER NOT NULL,
	FK_SC_EXPLOTACION INTEGER NOT NULL,
	CONSTRAINT FK_ESTATUS_SOLICITUD_COMPRA FOREIGN KEY (FK_SC_ESTATUS) REFERENCES ESTATUS (EST_CODIGO),
	CONSTRAINT FK_EXPLOTACION_SOLICITUD_COMPRE FOREIGN KEY (FK_SC_EXPLOTACION) REFERENCES EXPLOTACION (EXP_CODIGO),
	CONSTRAINT FK_ALIADO_SOLICITUD_COMPRA FOREIGN KEY (FK_SC_ALIADO) REFERENCES ALIADO_COMERCIAL (AC_NUMERO_RIF),
	CONSTRAINT PK_CODIGO_SOLICITUD_COMPRA PRIMARY KEY (SC_CODIGO),
	CONSTRAINT CHECK_COSTOTOTAL_SC CHECK (SC_COSTOTOTAL>0)
);

CREATE TABLE MAQ_FAS (
	MF_CODIGO SERIAL,
	-- MF_COSTO NUMERIC (15,2) NOT NULL,
	FK_MF_MAQUINARIA INTEGER NOT NULL,
	FK_MF_TM_FASE INTEGER NOT NULL,
	FK_MF_ESTATUS INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_MF PRIMARY KEY (MF_CODIGO),
	CONSTRAINT FK_MAQUINARIA_MF FOREIGN KEY (FK_MF_MAQUINARIA) REFERENCES MAQUINARIA (MAQ_CODIGO),
	CONSTRAINT FK_FASE_MF FOREIGN KEY (FK_MF_TM_FASE) REFERENCES TM_FAS (TMF_CODIGO),
	CONSTRAINT FK_ESTATUS_MF FOREIGN KEY (FK_MF_ESTATUS) REFERENCES ESTATUS (EST_CODIGO)
	-- CONSTRAINT CHECK_ESTATUS_MF CHECK (MF_COSTO>0)
);

CREATE TABLE YAC_MIN (
	YM_CODIGO SERIAL,
	FK_YM_YACIMIENTO INTEGER NOT NULL,
	FK_YM_MINMETALICO INTEGER,
	FK_YM_MINNOMETALICO INTEGER,
	YM_CANTIDAD NUMERIC (25,2) NOT NULL,
	CONSTRAINT PK_CODIGO_YM PRIMARY KEY (YM_CODIGO),
	CONSTRAINT FK_YACIMIENTO_YM FOREIGN KEY (FK_YM_YACIMIENTO) REFERENCES YACIMIENTO (YAC_CODIGO) ON DELETE CASCADE,
	CONSTRAINT FK_MINMETALICO_YM FOREIGN KEY (FK_YM_MINMETALICO) REFERENCES MIN_METALICO (MET_CODIGO) ON DELETE CASCADE,
	CONSTRAINT FK_MINNOMETALICO_YM FOREIGN KEY (FK_YM_MINNOMETALICO) REFERENCES MIN_NO_METALICO (NOM_CODIGO) ON DELETE CASCADE,
	CONSTRAINT CHECK_CANTIDAD_YM CHECK (YM_CANTIDAD>0)
	
);

CREATE TABLE MIN_MIN (
	MM_CODIGO SERIAL,
	MM_PROPORCIONM1M2 NUMERIC(10,2),
	FK_MM_1METALICO INTEGER,
	FK_MM_2METALICO INTEGER,
	FK_MM_1NOMETALICO INTEGER,
	FK_MM_2NOMETALICO INTEGER,
	CONSTRAINT PK_CODIGO_MM PRIMARY KEY (MM_CODIGO),
	CONSTRAINT FK_1METALICO_MM FOREIGN KEY (FK_MM_1METALICO) REFERENCES MIN_METALICO (MET_CODIGO),
	CONSTRAINT FK_1NOMETALICO_MM FOREIGN KEY (FK_MM_1NOMETALICO) REFERENCES MIN_NO_METALICO (NOM_CODIGO),
	CONSTRAINT FK_2METALICO_MM FOREIGN KEY (FK_MM_2METALICO) REFERENCES MIN_METALICO (MET_CODIGO),
	CONSTRAINT FK_2NOMETALICO_MM FOREIGN KEY (FK_MM_2NOMETALICO) REFERENCES MIN_NO_METALICO (NOM_CODIGO)
);

CREATE TABLE ALI_MM (
	AMM_CODIGO SERIAL,
	FK_AMM_ALIADO VARCHAR(50) NOT NULL,
	FK_AMM_MM INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_AMM PRIMARY KEY (AMM_CODIGO),
	CONSTRAINT FK_ALIADO_AMM FOREIGN KEY (FK_AMM_ALIADO) REFERENCES ALIADO_COMERCIAL (AC_NUMERO_RIF),
	CONSTRAINT FK_MM_AMM FOREIGN KEY (FK_AMM_MM) REFERENCES MIN_MIN (MM_CODIGO)
);

CREATE TABLE SOL_AMM (
	SAMM_CODIGO SERIAL,
	SAMM_CANTIDAD NUMERIC (10,2) NOT NULL,
	SAMM_COSTO NUMERIC (10,2) NOT NULL,
	FK_SAMM_SOLICITUD INTEGER NOT NULL,
	FK_SAMM_AMM INTEGER NOT NULL,
	CONSTRAINT PK_CODIGO_SAMM PRIMARY KEY (SAMM_CODIGO),
	CONSTRAINT FK_SOLICITUD_SAMM FOREIGN KEY (FK_SAMM_SOLICITUD) REFERENCES SOLICITUD_COMPRA(SC_CODIGO),
	CONSTRAINT FK_AMM_SAMM FOREIGN KEY (FK_SAMM_AMM) REFERENCES ALI_MM (AMM_CODIGO),
	CONSTRAINT CHECK_CANTIDAD_SAMM CHECK (SAMM_CANTIDAD>0),
	CONSTRAINT CHECK_COSTO_SAMM CHECK (SAMM_COSTO>0)
);

CREATE TABLE TP_TRANSFERENCIA (
	TPT_CODIGO SERIAL,
	TPT_NUMERO NUMERIC(20) NOT NULL,
	TPT_BANCO VARCHAR (50) NOT NULL,
	TPT_CUENTA NUMERIC(20) NOT NULL UNIQUE,
	CONSTRAINT PK_CODIGO_TPT PRIMARY KEY (TPT_CODIGO),
	CONSTRAINT CHECK_NUMERO_TPT CHECK (TPT_NUMERO>0),
	CONSTRAINT CHECK_CUENTA_TPT CHECK (TPT_CUENTA>0)
);

CREATE TABLE TP_CHEQUE (
	TPCH_CODIGO SERIAL,
	TPCH_NUMERO NUMERIC(20) NOT NULL,
	TPCH_BANCO VARCHAR (50) NOT NULL,
	TPCH_CUENTA NUMERIC(20) NOT NULL UNIQUE,
	CONSTRAINT PK_CODIGO_TPCH PRIMARY KEY (TPCH_CODIGO),
	CONSTRAINT CHECK_NUMERO_TPCH CHECK (TPCH_NUMERO>0),
	CONSTRAINT CHECK_CUENTA_TPCH CHECK (TPCH_CUENTA>0)
);

CREATE TABLE TP_CREDITO (
	TPC_CODIGO SERIAL,
	TPC_NUMERO NUMERIC(20) NOT NULL,
	TPC_BANCO VARCHAR (50) NOT NULL,
	TPC_TIPOCREDITO  VARCHAR (50)NOT NULL,
	CONSTRAINT PK_CODIGO_TPC PRIMARY KEY (TPC_CODIGO),
	CONSTRAINT CHECK_NUMERO_TPC CHECK (TPC_NUMERO>0),
	CONSTRAINT CHECK_TIPOCREDITO_TPC CHECK (TPC_TIPOCREDITO IN ('VISA','MASTER','AMERICAN EXPRESS'))
);


CREATE TABLE TP_DEBITO (
	TPD_CODIGO SERIAL,
	TPD_NUMERO NUMERIC(20) NOT NULL,
	TPD_BANCO VARCHAR (50) NOT NULL,
	TPD_TIPODEBITO  VARCHAR (50)NOT NULL,
	CONSTRAINT PK_CODIGO_TPD PRIMARY KEY (TPD_CODIGO),
	CONSTRAINT CHECK_NUMERO_TPD CHECK (TPD_NUMERO>0),
	CONSTRAINT CHECK_TIPODEBITO_TPD CHECK (TPD_TIPODEBITO IN ('MAESTRO','SUICHE7B'))
);

CREATE TABLE VEN_TIP(
	VT_CODIGO SERIAL,
	VT_FECHA TIMESTAMP NOT NULL,
	VT_MONTO NUMERIC (25,2) NOT NULL,
	FK_VT_TPTRANSFERENCIA INTEGER,
	FK_VT_TPCREDITO INTEGER,
	FK_VT_TPDEBITO INTEGER,
	FK_VT_TPCHEQUE INTEGER,
	FK_VT_VENTA INTEGER  NOT NULL,
	CONSTRAINT FK_VENTA_VENTIP FOREIGN KEY (FK_VT_VENTA) REFERENCES VENTA (VEN_CODIGO)  ON DELETE CASCADE ,
	CONSTRAINT FK_TPTRANSFERENCIA_VENTIP FOREIGN KEY (FK_VT_TPTRANSFERENCIA) REFERENCES TP_TRANSFERENCIA (TPT_CODIGO) ON DELETE CASCADE,
	CONSTRAINT FK_TPCREDITO_VENTIP FOREIGN KEY (FK_VT_TPCREDITO) REFERENCES TP_CREDITO (TPC_CODIGO)  ON DELETE CASCADE,
	CONSTRAINT FK_TPDEBITO_VENTIP FOREIGN KEY (FK_VT_TPDEBITO) REFERENCES TP_DEBITO (TPD_CODIGO)  ON DELETE CASCADE,															
	CONSTRAINT FK_TPCHEQUE_VENTIP FOREIGN KEY (FK_VT_TPCHEQUE) REFERENCES TP_CHEQUE (TPCH_CODIGO)  ON DELETE CASCADE,
	CONSTRAINT PK_CODIGO_VEN_TIP PRIMARY KEY (VT_CODIGO),
	CONSTRAINT CHECK_MONTO_VT CHECK (VT_MONTO>0)
);

CREATE TABLE DETALLE_VEN(
	DEV_CODIGO SERIAL,
	FK_DEV_VENTA INTEGER  NOT NULL,
	DEV_MONTO NUMERIC (25,2) NOT NULL,
	DEV_CANTIDAD NUMERIC (10,2) NOT NULL,
	FK_DEV_MIN_PRE INTEGER NOT NULL,
	CONSTRAINT FK_VENTA_DEV FOREIGN KEY (FK_DEV_VENTA) REFERENCES VENTA (VEN_CODIGO) ON DELETE CASCADE,
	CONSTRAINT FK_MINERAL_PRESENTACION_DEV FOREIGN KEY (FK_DEV_MIN_PRE) REFERENCES MIN_PRE (MP_CODIGO),
	CONSTRAINT PK_CODIGO_DEV PRIMARY KEY (DEV_CODIGO),
	CONSTRAINT CHECK_MONTO_DEV CHECK (DEV_MONTO>0),
	CONSTRAINT CHECK_CANTIDAD_DEV CHECK (DEV_CANTIDAD>0)
);
