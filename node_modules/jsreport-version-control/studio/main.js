/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = Studio;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = Studio.libraries['react'];

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(8);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(10)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jsreportStudio = __webpack_require__(0);

var _jsreportStudio2 = _interopRequireDefault(_jsreportStudio);

var _DownloadBigFileModal = __webpack_require__(6);

var _DownloadBigFileModal2 = _interopRequireDefault(_DownloadBigFileModal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var openDiff = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(change) {
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(change.type === 'bigfile')) {
              _context.next = 2;
              break;
            }

            return _context.abrupt('return', _jsreportStudio2.default.openModal(_DownloadBigFileModal2.default, {
              change: change
            }));

          case 2:

            _jsreportStudio2.default.customPreview('/api/version-control/diff-html', { patch: change.patch });

          case 3:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function openDiff(_x) {
    return _ref.apply(this, arguments);
  };
}();

var operationIcon = function operationIcon(operation) {
  switch (operation) {
    case 'insert':
      return 'fa fa-plus';
    case 'remove':
      return 'fa fa-eraser';
    case 'update':
      return 'fa fa-pencil';
  }
};

var renderChange = function renderChange(c) {
  return React.createElement(
    'tbody',
    { key: c.entitySet + '-' + c.path },
    React.createElement(
      'tr',
      { onClick: function onClick() {
          return openDiff(c);
        } },
      React.createElement(
        'td',
        { style: { textAlign: 'center' } },
        React.createElement('i', { className: operationIcon(c.operation) })
      ),
      React.createElement(
        'td',
        null,
        c.path
      ),
      React.createElement(
        'td',
        null,
        c.entitySet
      )
    )
  );
};

exports.default = function (_ref2) {
  var changes = _ref2.changes;
  return React.createElement(
    'table',
    { className: 'table' },
    React.createElement(
      'thead',
      null,
      React.createElement(
        'tr',
        null,
        React.createElement(
          'th',
          { style: { width: '20px' } },
          'operation'
        ),
        React.createElement(
          'th',
          null,
          'path'
        ),
        React.createElement(
          'th',
          null,
          'entity set'
        )
      )
    ),
    changes.map(function (c) {
      return renderChange(c);
    })
  );
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jsreportStudio = __webpack_require__(0);

var _jsreportStudio2 = _interopRequireDefault(_jsreportStudio);

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _HistoryEditor = __webpack_require__(5);

var _HistoryEditor2 = _interopRequireDefault(_HistoryEditor);

var _LocalChangesEditor = __webpack_require__(12);

var _LocalChangesEditor2 = _interopRequireDefault(_LocalChangesEditor);

var _VersionControl = __webpack_require__(2);

var _VersionControl2 = _interopRequireDefault(_VersionControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

_jsreportStudio2.default.initializeListeners.push(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
  var VCToolbar;
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!(_jsreportStudio2.default.authentication && !_jsreportStudio2.default.authentication.user.isAdmin)) {
            _context.next = 2;
            break;
          }

          return _context.abrupt('return');

        case 2:

          _jsreportStudio2.default.addEditorComponent('versionControlHistory', _HistoryEditor2.default);
          _jsreportStudio2.default.addEditorComponent('versionControlLocalChanges', _LocalChangesEditor2.default);

          VCToolbar = function (_Component) {
            _inherits(VCToolbar, _Component);

            function VCToolbar() {
              _classCallCheck(this, VCToolbar);

              var _this = _possibleConstructorReturn(this, (VCToolbar.__proto__ || Object.getPrototypeOf(VCToolbar)).call(this));

              _this.state = {};
              _this.tryHide = _this.tryHide.bind(_this);
              return _this;
            }

            _createClass(VCToolbar, [{
              key: 'componentDidMount',
              value: function componentDidMount() {
                window.addEventListener('click', this.tryHide);
              }
            }, {
              key: 'componentWillUnmount',
              value: function componentWillUnmount() {
                window.removeEventListener('click', this.tryHide);
              }
            }, {
              key: 'tryHide',
              value: function tryHide() {
                this.setState({ expandedToolbar: false });
              }
            }, {
              key: 'openHistory',
              value: function openHistory(e) {
                e.stopPropagation();
                this.tryHide();
                _jsreportStudio2.default.openTab({ key: 'versionControlHistory', editorComponentKey: 'versionControlHistory', title: 'Commits history' });
              }
            }, {
              key: 'openLocalChanges',
              value: function openLocalChanges(e) {
                e.stopPropagation();
                this.tryHide();
                _jsreportStudio2.default.openTab({ key: 'versionControlLocalChanges', editorComponentKey: 'versionControlLocalChanges', title: 'Uncommited changes' });
              }
            }, {
              key: 'render',
              value: function render() {
                var _this2 = this;

                return _react2.default.createElement(
                  'div',
                  { className: 'toolbar-button', onClick: function onClick(e) {
                      return _this2.openLocalChanges(e);
                    } },
                  _react2.default.createElement('i', { className: 'fa fa-history ' }),
                  'Commit',
                  _react2.default.createElement('span', { className: _VersionControl2.default.runCaret, onClick: function onClick(e) {
                      e.stopPropagation();_this2.setState({ expandedToolbar: !_this2.state.expandedToolbar });
                    } }),
                  _react2.default.createElement(
                    'div',
                    { className: _VersionControl2.default.runPopup, style: { display: this.state.expandedToolbar ? 'block' : 'none' } },
                    _react2.default.createElement(
                      'div',
                      { title: 'History', className: 'toolbar-button', onClick: function onClick(e) {
                          return _this2.openHistory(e);
                        } },
                      _react2.default.createElement('i', { className: 'fa fa-history' }),
                      _react2.default.createElement(
                        'span',
                        null,
                        'History'
                      )
                    )
                  )
                );
              }
            }]);

            return VCToolbar;
          }(_react.Component);

          _jsreportStudio2.default.addToolbarComponent(function (props) {
            return _react2.default.createElement(VCToolbar, null);
          });

        case 6:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, undefined);
})));

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _jsreportStudio = __webpack_require__(0);

var _jsreportStudio2 = _interopRequireDefault(_jsreportStudio);

var _ChangesTable = __webpack_require__(3);

var _ChangesTable2 = _interopRequireDefault(_ChangesTable);

var _VersionControl = __webpack_require__(2);

var _VersionControl2 = _interopRequireDefault(_VersionControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HistoryEditor = function (_Component) {
  _inherits(HistoryEditor, _Component);

  function HistoryEditor() {
    _classCallCheck(this, HistoryEditor);

    var _this = _possibleConstructorReturn(this, (HistoryEditor.__proto__ || Object.getPrototypeOf(HistoryEditor)).call(this));

    _this.state = { history: [] };
    return _this;
  }

  _createClass(HistoryEditor, [{
    key: 'onTabActive',
    value: function onTabActive() {
      this.load();
    }
  }, {
    key: 'load',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var res;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.fetchRequested) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt('return');

              case 2:

                this.fetchRequested = true;

                _context.prev = 3;
                _context.next = 6;
                return _jsreportStudio2.default.api.get('/api/version-control/history');

              case 6:
                res = _context.sent;

                this.setState({ history: res });
                _context.next = 13;
                break;

              case 10:
                _context.prev = 10;
                _context.t0 = _context['catch'](3);

                alert(_context.t0);

              case 13:
                _context.prev = 13;

                this.fetchRequested = false;
                return _context.finish(13);

              case 16:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 10, 13, 16]]);
      }));

      function load() {
        return _ref.apply(this, arguments);
      }

      return load;
    }()
  }, {
    key: 'checkout',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {
        var localChanges;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.prev = 0;
                _context2.next = 3;
                return _jsreportStudio2.default.api.get('/api/version-control/local-changes');

              case 3:
                localChanges = _context2.sent;

                if (!(localChanges.length > 0)) {
                  _context2.next = 6;
                  break;
                }

                return _context2.abrupt('return', this.setState({ error: 'You have uncommited changes. You need to commit or revert them before checkout.' }));

              case 6:
                if (!confirm('This will change the state of all entities to the state stored with selected commit. Are you sure?')) {
                  _context2.next = 10;
                  break;
                }

                _context2.next = 9;
                return _jsreportStudio2.default.api.post('/api/version-control/checkout', {
                  data: {
                    _id: id
                  }
                });

              case 9:
                return _context2.abrupt('return', _jsreportStudio2.default.reset().catch(function (e) {
                  return console.error(e);
                }));

              case 10:
                _context2.next = 15;
                break;

              case 12:
                _context2.prev = 12;
                _context2.t0 = _context2['catch'](0);

                alert(_context2.t0);

              case 15:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this, [[0, 12]]);
      }));

      function checkout(_x) {
        return _ref2.apply(this, arguments);
      }

      return checkout;
    }()
  }, {
    key: 'selectCommit',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(c) {
        var res;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.setState({ commit: c });

                _context3.prev = 1;
                _context3.next = 4;
                return _jsreportStudio2.default.api.get('/api/version-control/diff/' + c._id);

              case 4:
                res = _context3.sent;

                this.setState({ diff: res });
                _context3.next = 11;
                break;

              case 8:
                _context3.prev = 8;
                _context3.t0 = _context3['catch'](1);

                alert(_context3.t0);

              case 11:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 8]]);
      }));

      function selectCommit(_x2) {
        return _ref3.apply(this, arguments);
      }

      return selectCommit;
    }()
  }, {
    key: 'renderCommit',
    value: function renderCommit(commit) {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'h2',
          null,
          _react2.default.createElement('i', { className: 'fa fa-info-circle' }),
          ' ',
          commit.message
        ),
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'small',
            null,
            commit.date.toLocaleString()
          ),
          _react2.default.createElement(
            'button',
            { className: 'button danger', onClick: function onClick() {
                return _this2.checkout(commit._id);
              } },
            'Checkout'
          ),
          _react2.default.createElement(
            'span',
            { style: { color: 'red', marginTop: '0.5rem', display: this.state.error ? 'block' : 'none' } },
            this.state.error
          )
        )
      );
    }
  }, {
    key: 'localChanges',
    value: function localChanges() {
      _jsreportStudio2.default.openTab({ key: 'versionControlLocalChanges', editorComponentKey: 'versionControlLocalChanges', title: 'Uncommited changes' });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        'div',
        { className: 'block custom-editor' },
        _react2.default.createElement(
          'h2',
          null,
          _react2.default.createElement('i', { className: 'fa fa-history' }),
          ' Commits history',
          _react2.default.createElement(
            'button',
            { className: 'button confirmation', onClick: function onClick() {
                return _this3.localChanges();
              } },
            'Uncommited changes'
          )
        ),
        _react2.default.createElement(
          'div',
          { style: { marginTop: '1rem', marginBottom: '1rem' } },
          this.state.history.length > 0 ? 'Select a commit from the list to inspect the changes..' : ''
        ),
        _react2.default.createElement(
          'div',
          { className: _VersionControl2.default.listContainer + ' block-item' },
          _react2.default.createElement(
            'table',
            { className: 'table' },
            _react2.default.createElement(
              'thead',
              null,
              _react2.default.createElement(
                'tr',
                null,
                _react2.default.createElement(
                  'th',
                  null,
                  'date'
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  'message'
                )
              )
            ),
            _react2.default.createElement(
              'tbody',
              null,
              this.state.history.map(function (h) {
                return _react2.default.createElement(
                  'tr',
                  { key: h._id, onClick: function onClick() {
                      return _this3.selectCommit(h);
                    } },
                  _react2.default.createElement(
                    'td',
                    null,
                    h.date.toLocaleString()
                  ),
                  _react2.default.createElement(
                    'td',
                    null,
                    h.message
                  )
                );
              })
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { style: { marginTop: '1rem', marginBottom: '1rem' } },
          this.state.commit ? this.renderCommit(this.state.commit) : null
        ),
        _react2.default.createElement(
          'div',
          { className: _VersionControl2.default.listContainer + ' block-item' },
          this.state.diff ? _react2.default.createElement(_ChangesTable2.default, { changes: this.state.diff }) : ''
        )
      );
    }
  }]);

  return HistoryEditor;
}(_react.Component);

exports.default = HistoryEditor;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _filesaver = __webpack_require__(7);

var _filesaver2 = _interopRequireDefault(_filesaver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var b64toBlob = function b64toBlob(b64Data) {
  var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var sliceSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 512;

  var byteCharacters = atob(b64Data);
  var byteArrays = [];

  for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
    var slice = byteCharacters.slice(offset, offset + sliceSize);

    var byteNumbers = new Array(slice.length);
    for (var i = 0; i < slice.length; i++) {
      byteNumbers[i] = slice.charCodeAt(i);
    }

    var byteArray = new Uint8Array(byteNumbers);

    byteArrays.push(byteArray);
  }

  var blob = new Blob(byteArrays, { type: contentType });
  return blob;
};

var DownloadBigFileModal = function (_Component) {
  _inherits(DownloadBigFileModal, _Component);

  function DownloadBigFileModal() {
    _classCallCheck(this, DownloadBigFileModal);

    return _possibleConstructorReturn(this, (DownloadBigFileModal.__proto__ || Object.getPrototypeOf(DownloadBigFileModal)).apply(this, arguments));
  }

  _createClass(DownloadBigFileModal, [{
    key: 'download',
    value: function download() {
      var blob = b64toBlob(this.props.options.change.patch);
      _filesaver2.default.saveAs(blob, this.props.options.change.path.split('/')[0]);
    }
  }, {
    key: 'renderDownload',
    value: function renderDownload() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'p',
          null,
          'The version control doesn\'t diff big or binary files. Please download it to see its content'
        ),
        _react2.default.createElement(
          'div',
          { className: 'button-bar' },
          _react2.default.createElement(
            'button',
            { className: 'button confirmation', onClick: function onClick() {
                return _this2.download();
              } },
            'Download'
          )
        )
      );
    }
  }, {
    key: 'renderEmpty',
    value: function renderEmpty() {
      var _this3 = this;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'p',
          null,
          'The new document is empty.'
        ),
        _react2.default.createElement(
          'div',
          { className: 'button-bar' },
          _react2.default.createElement(
            'button',
            { className: 'button confirmation', onClick: function onClick() {
                return _this3.props.close();
              } },
            'Ok'
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var filename = this.props.options.change.path.split('/')[0];

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'h2',
          null,
          filename
        ),
        this.props.options.change.patch ? this.renderDownload() : this.renderEmpty()
      );
    }
  }]);

  return DownloadBigFileModal;
}(_react.Component);

exports.default = DownloadBigFileModal;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = Studio.libraries['filesaver.js-npm'];

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(9)(true);
// Module
exports.push([module.i, ".popup___3FgvU {\n  background-color: #424c57;\n  position: absolute;\n  right: 0;\n  padding: 0.5rem;\n  top: 2.4rem;\n  z-index: 200;\n}\n\n.popup___3FgvU > div {\n  padding: 0.5rem;\n}\n\n.popup___3FgvU > div:hover {\n  background-color: red;\n}\n\n.runCaret___2HCZa {\n  font-family: FontAwesome;\n  padding: 0.5rem;\n  font-size: 0.7rem;\n}\n\n.runCaret___2HCZa:hover {\n  color: blue;\n}\n\n.runCaret___2HCZa:after {\n  content: \"\\f0d7 \";\n}\n\n.runPopup___1Zk47 {\n  background-color: #424c57;\n  top: 2.4rem;\n  position: absolute;\n  padding: 0.5rem;\n  z-index: 200;\n}\n\n.listContainer___2itcv {\n  overflow: auto;\n  position: relative;\n  padding: 1rem;\n  min-height: 0;\n  height: auto;\n}\n\n.listContainer___2itcv > table {\n  width: 95%;\n  position: absolute !important;\n}\n", "",{"version":3,"sources":["VersionControl.scss"],"names":[],"mappings":"AAAA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,QAAQ;EACR,eAAe;EACf,WAAW;EACX,YAAY;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,wBAAwB;EACxB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,kBAAkB;EAClB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,aAAa;EACb,aAAa;EACb,YAAY;AACd;;AAEA;EACE,UAAU;EACV,6BAA6B;AAC/B","file":"VersionControl.scss","sourcesContent":[".popup {\n  background-color: #424c57;\n  position: absolute;\n  right: 0;\n  padding: 0.5rem;\n  top: 2.4rem;\n  z-index: 200;\n}\n\n.popup > div {\n  padding: 0.5rem;\n}\n\n.popup > div:hover {\n  background-color: red;\n}\n\n.runCaret {\n  font-family: FontAwesome;\n  padding: 0.5rem;\n  font-size: 0.7rem;\n}\n\n.runCaret:hover {\n  color: blue;\n}\n\n.runCaret:after {\n  content: \"\\f0d7 \";\n}\n\n.runPopup {\n  background-color: #424c57;\n  top: 2.4rem;\n  position: absolute;\n  padding: 0.5rem;\n  z-index: 200;\n}\n\n.listContainer {\n  overflow: auto;\n  position: relative;\n  padding: 1rem;\n  min-height: 0;\n  height: auto;\n}\n\n.listContainer > table {\n  width: 95%;\n  position: absolute !important;\n}\n"]}]);

// Exports
exports.locals = {
	"popup": "popup___3FgvU",
	"runCaret": "runCaret___2HCZa",
	"runPopup": "runPopup___1Zk47",
	"listContainer": "listContainer___2itcv"
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return '@media ' + item[2] + '{' + content + '}';
      } else {
        return content;
      }
    }).join('');
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(11);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 11 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _jsreportStudio = __webpack_require__(0);

var _jsreportStudio2 = _interopRequireDefault(_jsreportStudio);

var _ChangesTable = __webpack_require__(3);

var _ChangesTable2 = _interopRequireDefault(_ChangesTable);

var _VersionControl = __webpack_require__(2);

var _VersionControl2 = _interopRequireDefault(_VersionControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LocalChangesEditor = function (_Component) {
  _inherits(LocalChangesEditor, _Component);

  function LocalChangesEditor(props) {
    _classCallCheck(this, LocalChangesEditor);

    var _this = _possibleConstructorReturn(this, (LocalChangesEditor.__proto__ || Object.getPrototypeOf(LocalChangesEditor)).call(this, props));

    _this.state = { message: '' };
    return _this;
  }

  _createClass(LocalChangesEditor, [{
    key: 'onTabActive',
    value: function onTabActive() {
      this.load();
    }
  }, {
    key: 'load',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var res;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.fetchRequested) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt('return');

              case 2:

                this.fetchRequested = true;

                _context.prev = 3;
                _context.next = 6;
                return _jsreportStudio2.default.api.get('/api/version-control/local-changes');

              case 6:
                res = _context.sent;

                this.setState({ diff: res });
                _context.next = 13;
                break;

              case 10:
                _context.prev = 10;
                _context.t0 = _context['catch'](3);

                alert(_context.t0);

              case 13:
                _context.prev = 13;

                this.fetchRequested = false;
                return _context.finish(13);

              case 16:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 10, 13, 16]]);
      }));

      function load() {
        return _ref.apply(this, arguments);
      }

      return load;
    }()
  }, {
    key: 'commit',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.state.message) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt('return', this.setState({ error: 'Commit message must be filled' }));

              case 2:
                _context2.prev = 2;
                _context2.next = 5;
                return _jsreportStudio2.default.api.post('/api/version-control/commit', {
                  data: {
                    message: this.state.message
                  }
                });

              case 5:
                this.setState({ message: '', error: null });
                _context2.next = 8;
                return this.load();

              case 8:
                _context2.next = 13;
                break;

              case 10:
                _context2.prev = 10;
                _context2.t0 = _context2['catch'](2);

                alert(_context2.t0);

              case 13:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this, [[2, 10]]);
      }));

      function commit() {
        return _ref2.apply(this, arguments);
      }

      return commit;
    }()
  }, {
    key: 'revert',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;

                if (!confirm('This will delete all your uncommited files and revert changes. Are you sure?')) {
                  _context3.next = 5;
                  break;
                }

                _context3.next = 4;
                return _jsreportStudio2.default.api.post('/api/version-control/revert');

              case 4:
                return _context3.abrupt('return', _jsreportStudio2.default.reset().catch(function (e) {
                  return console.error(e);
                }));

              case 5:
                _context3.next = 10;
                break;

              case 7:
                _context3.prev = 7;
                _context3.t0 = _context3['catch'](0);

                alert(_context3.t0);

              case 10:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 7]]);
      }));

      function revert() {
        return _ref3.apply(this, arguments);
      }

      return revert;
    }()
  }, {
    key: 'history',
    value: function history() {
      _jsreportStudio2.default.openTab({ key: 'versionControlHistory', editorComponentKey: 'versionControlHistory', title: 'Commits history' });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        { className: 'block custom-editor' },
        _react2.default.createElement(
          'h1',
          null,
          _react2.default.createElement('i', { className: 'fa fa-history' }),
          ' uncommited changes',
          _react2.default.createElement(
            'button',
            { className: 'button confirmation', onClick: function onClick() {
                return _this2.history();
              } },
            'Commits history'
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'form-group' },
          'The version control is currently in beta.'
        ),
        _react2.default.createElement(
          'div',
          { className: 'form-group' },
          _react2.default.createElement(
            'label',
            null,
            'Message'
          ),
          _react2.default.createElement('input', { type: 'text', value: this.state.message, onChange: function onChange(event) {
              return _this2.setState({ message: event.target.value, error: null });
            } }),
          _react2.default.createElement(
            'span',
            { style: { color: 'red', display: this.state.error ? 'block' : 'none' } },
            this.state.error
          )
        ),
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            'button',
            { className: 'button confirmation', onClick: function onClick() {
                return _this2.commit();
              } },
            'Commit'
          ),
          _react2.default.createElement(
            'button',
            { className: 'button danger', onClick: function onClick() {
                return _this2.revert();
              } },
            'Revert'
          )
        ),
        _react2.default.createElement(
          'div',
          { className: _VersionControl2.default.listContainer + ' block-item' },
          this.state.diff ? _react2.default.createElement(_ChangesTable2.default, { changes: this.state.diff }) : ''
        )
      );
    }
  }]);

  return LocalChangesEditor;
}(_react.Component);

exports.default = LocalChangesEditor;

/***/ })
/******/ ]);